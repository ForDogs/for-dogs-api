version: '3.8'

services:
  server:
    build:
      dockerfile: Dockerfile
      context: ./
    container_name: for_dog_server
    restart: always
    depends_on:
      - mysql
      - redis
      - dynamodb
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/server/dumps:/dumps
      - ./src/main/resources/ssl:/app/ssl
    environment:
      AWS_ACCESS_KEY_ID: 'DUMMYIDEXAMPLE'
      AWS_SECRET_ACCESS_KEY: 'DUMMYEXAMPLEKEY'
      REGION: 'ap-northeast-2'
      TZ: Asia/Seoul

  mysql:
    container_name: for_dog_mysql_db
    image: mysql:8.0.23
    platform: linux/amd64
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql/db:/var/lib/mysql
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
      - ./docker/mysql/initdb.d:/docker-entrypoint-initdb.d
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_DATABASE: for_dog_db
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_USER: user
      MYSQL_PASSWORD: 1234
      TZ: Asia/Seoul

  redis:
    image: redis:latest
    container_name: for_dog_redis
    volumes:
      - ./docker/redis/data:/data
    ports:
      - '6379:6379'

  dynamodb:
    image: amazon/dynamodb-local:latest
    container_name: for_dog_dynamodb
    ports:
      - '8000:8000'
    volumes:
      - './docker/dynamodb/data:/home/dynamodblocal/data"
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    working_dir: /home/dynamodblocal
